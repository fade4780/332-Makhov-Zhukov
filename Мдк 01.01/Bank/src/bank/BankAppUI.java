package bank;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class BankAppUI {
    private final Map<String, Account> accounts = new HashMap<>();
    private final Scanner scanner = new Scanner(System.in);

    public BankAppUI() {
        // –°–æ–∑–¥–∞—ë–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞—Ä–∞–Ω–µ–µ
        accounts.put("1001", new BaseClient("–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", BigDecimal.valueOf(5000)));
        accounts.put("1002", new PremiumClient("–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞", BigDecimal.valueOf(20000)));
        accounts.put("1003", new VipClient("–°–µ—Ä–≥–µ–π –°–∏–¥–æ—Ä–æ–≤", BigDecimal.valueOf(100000)));
    }

    public void start() {
        System.out.println("üè¶ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!\n");

        while (true) {
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:");
            System.out.println("1Ô∏è‚É£ –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç");
            System.out.println("2Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤");
            System.out.println("0Ô∏è‚É£ –í—ã–π—Ç–∏");
            System.out.print("> ");

            String choice = scanner.nextLine().trim();

            switch (choice) {
                case "1" -> loginMenu();
                case "2" -> showAllAccounts();
                case "0" -> {
                    System.out.println("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!");
                    return;
                }
                default -> System.out.println("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n");
            }
        }
    }

    private void showAllAccounts() {
        System.out.println("\nüìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤:");
        for (Map.Entry<String, Account> entry : accounts.entrySet()) {
            System.out.println("ID: " + entry.getKey() + " ‚Äî " + entry.getValue());
        }
        System.out.println();
    }

    private void loginMenu() {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞: ");
        String id = scanner.nextLine().trim();

        Account acc = accounts.get(id);
        if (acc == null) {
            System.out.println("‚ùå –ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.\n");
            return;
        }

        System.out.printf("‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!%n%n", acc.getFullName());
        accountMenu(acc);
    }

    private void accountMenu(Account acc) {
        while (true) {
            System.out.println("–ú–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞:");
            System.out.println("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å");
            System.out.println("2Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç—å —É—Å–ª—É–≥—É");
            System.out.println("3Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É");
            System.out.println("4Ô∏è‚É£ –°–ø–∏—Å–∞—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—É—é –ø–ª–∞—Ç—É");
            System.out.println("0Ô∏è‚É£ –í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
            System.out.print("> ");

            String choice = scanner.nextLine().trim();
            try {
                switch (choice) {
                    case "1" -> acc.printBalance();
                    case "2" -> payService(acc);
                    case "3" -> transferMoney(acc);
                    case "4" -> acc.monthlyFee();
                    case "0" -> {
                        System.out.println();
                        return;
                    }
                    default -> System.out.println("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n");
                }
            } catch (Exception e) {
                System.out.println("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage() + "\n");
            }
        }
    }

    private void payService(Account acc) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã: ");
        BigDecimal amount = new BigDecimal(scanner.nextLine().trim());
        acc.payForService(amount);
    }

    private void transferMoney(Account acc) {
        System.out.print("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ");
        String toId = scanner.nextLine().trim();
        Account receiver = accounts.get(toId);
        if (receiver == null) {
            System.out.println("‚ùå –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.\n");
            return;
        }

        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞: ");
        BigDecimal amount = new BigDecimal(scanner.nextLine().trim());
        acc.transferTo(receiver, amount);
    }
}
